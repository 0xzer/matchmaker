// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: tinder_auth.proto

package binary

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LoginResult_Captcha int32

const (
	LoginResult_CAPTCHA_INVALID LoginResult_Captcha = 0
	LoginResult_CAPTCHA_V1      LoginResult_Captcha = 1
	LoginResult_CAPTCHA_V2      LoginResult_Captcha = 2
)

// Enum value maps for LoginResult_Captcha.
var (
	LoginResult_Captcha_name = map[int32]string{
		0: "CAPTCHA_INVALID",
		1: "CAPTCHA_V1",
		2: "CAPTCHA_V2",
	}
	LoginResult_Captcha_value = map[string]int32{
		"CAPTCHA_INVALID": 0,
		"CAPTCHA_V1":      1,
		"CAPTCHA_V2":      2,
	}
)

func (x LoginResult_Captcha) Enum() *LoginResult_Captcha {
	p := new(LoginResult_Captcha)
	*p = x
	return p
}

func (x LoginResult_Captcha) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LoginResult_Captcha) Descriptor() protoreflect.EnumDescriptor {
	return file_tinder_auth_proto_enumTypes[0].Descriptor()
}

func (LoginResult_Captcha) Type() protoreflect.EnumType {
	return &file_tinder_auth_proto_enumTypes[0]
}

func (x LoginResult_Captcha) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LoginResult_Captcha.Descriptor instead.
func (LoginResult_Captcha) EnumDescriptor() ([]byte, []int) {
	return file_tinder_auth_proto_rawDescGZIP(), []int{25, 0}
}

type SocialConnection_Service int32

const (
	SocialConnection_SERVICE_INVALID  SocialConnection_Service = 0
	SocialConnection_SERVICE_FACEBOOK SocialConnection_Service = 1
	SocialConnection_SERVICE_GOOGLE   SocialConnection_Service = 2
	SocialConnection_SERVICE_APPLE    SocialConnection_Service = 3
)

// Enum value maps for SocialConnection_Service.
var (
	SocialConnection_Service_name = map[int32]string{
		0: "SERVICE_INVALID",
		1: "SERVICE_FACEBOOK",
		2: "SERVICE_GOOGLE",
		3: "SERVICE_APPLE",
	}
	SocialConnection_Service_value = map[string]int32{
		"SERVICE_INVALID":  0,
		"SERVICE_FACEBOOK": 1,
		"SERVICE_GOOGLE":   2,
		"SERVICE_APPLE":    3,
	}
)

func (x SocialConnection_Service) Enum() *SocialConnection_Service {
	p := new(SocialConnection_Service)
	*p = x
	return p
}

func (x SocialConnection_Service) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SocialConnection_Service) Descriptor() protoreflect.EnumDescriptor {
	return file_tinder_auth_proto_enumTypes[1].Descriptor()
}

func (SocialConnection_Service) Type() protoreflect.EnumType {
	return &file_tinder_auth_proto_enumTypes[1]
}

func (x SocialConnection_Service) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SocialConnection_Service.Descriptor instead.
func (SocialConnection_Service) EnumDescriptor() ([]byte, []int) {
	return file_tinder_auth_proto_rawDescGZIP(), []int{27, 0}
}

type FacebookToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExternalToken string                  `protobuf:"bytes,1,opt,name=external_token,json=externalToken,proto3" json:"external_token,omitempty"`
	RefreshToken  *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
}

func (x *FacebookToken) Reset() {
	*x = FacebookToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tinder_auth_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FacebookToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FacebookToken) ProtoMessage() {}

func (x *FacebookToken) ProtoReflect() protoreflect.Message {
	mi := &file_tinder_auth_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FacebookToken.ProtoReflect.Descriptor instead.
func (*FacebookToken) Descriptor() ([]byte, []int) {
	return file_tinder_auth_proto_rawDescGZIP(), []int{0}
}

func (x *FacebookToken) GetExternalToken() string {
	if x != nil {
		return x.ExternalToken
	}
	return ""
}

func (x *FacebookToken) GetRefreshToken() *wrapperspb.StringValue {
	if x != nil {
		return x.RefreshToken
	}
	return nil
}

type Phone struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phone        string                  `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"`
	RefreshToken *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	// Types that are assignable to Check:
	//
	//	*Phone_CaptchaToken
	//	*Phone_IosDeviceToken
	//	*Phone_AndroidJws
	Check isPhone_Check `protobuf_oneof:"check"`
}

func (x *Phone) Reset() {
	*x = Phone{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tinder_auth_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Phone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Phone) ProtoMessage() {}

func (x *Phone) ProtoReflect() protoreflect.Message {
	mi := &file_tinder_auth_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Phone.ProtoReflect.Descriptor instead.
func (*Phone) Descriptor() ([]byte, []int) {
	return file_tinder_auth_proto_rawDescGZIP(), []int{1}
}

func (x *Phone) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *Phone) GetRefreshToken() *wrapperspb.StringValue {
	if x != nil {
		return x.RefreshToken
	}
	return nil
}

func (m *Phone) GetCheck() isPhone_Check {
	if m != nil {
		return m.Check
	}
	return nil
}

func (x *Phone) GetCaptchaToken() *wrapperspb.StringValue {
	if x, ok := x.GetCheck().(*Phone_CaptchaToken); ok {
		return x.CaptchaToken
	}
	return nil
}

func (x *Phone) GetIosDeviceToken() *wrapperspb.StringValue {
	if x, ok := x.GetCheck().(*Phone_IosDeviceToken); ok {
		return x.IosDeviceToken
	}
	return nil
}

func (x *Phone) GetAndroidJws() *wrapperspb.StringValue {
	if x, ok := x.GetCheck().(*Phone_AndroidJws); ok {
		return x.AndroidJws
	}
	return nil
}

type isPhone_Check interface {
	isPhone_Check()
}

type Phone_CaptchaToken struct {
	CaptchaToken *wrapperspb.StringValue `protobuf:"bytes,3,opt,name=captcha_token,json=captchaToken,proto3,oneof"`
}

type Phone_IosDeviceToken struct {
	IosDeviceToken *wrapperspb.StringValue `protobuf:"bytes,4,opt,name=ios_device_token,json=iosDeviceToken,proto3,oneof"`
}

type Phone_AndroidJws struct {
	AndroidJws *wrapperspb.StringValue `protobuf:"bytes,5,opt,name=android_jws,json=androidJws,proto3,oneof"`
}

func (*Phone_CaptchaToken) isPhone_Check() {}

func (*Phone_IosDeviceToken) isPhone_Check() {}

func (*Phone_AndroidJws) isPhone_Check() {}

type PhoneOtpResend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phone        *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"`
	RefreshToken *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	// Types that are assignable to Check:
	//
	//	*PhoneOtpResend_IosDeviceToken
	//	*PhoneOtpResend_AndroidJws
	Check isPhoneOtpResend_Check `protobuf_oneof:"check"`
}

func (x *PhoneOtpResend) Reset() {
	*x = PhoneOtpResend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tinder_auth_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhoneOtpResend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhoneOtpResend) ProtoMessage() {}

func (x *PhoneOtpResend) ProtoReflect() protoreflect.Message {
	mi := &file_tinder_auth_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhoneOtpResend.ProtoReflect.Descriptor instead.
func (*PhoneOtpResend) Descriptor() ([]byte, []int) {
	return file_tinder_auth_proto_rawDescGZIP(), []int{2}
}

func (x *PhoneOtpResend) GetPhone() *wrapperspb.StringValue {
	if x != nil {
		return x.Phone
	}
	return nil
}

func (x *PhoneOtpResend) GetRefreshToken() *wrapperspb.StringValue {
	if x != nil {
		return x.RefreshToken
	}
	return nil
}

func (m *PhoneOtpResend) GetCheck() isPhoneOtpResend_Check {
	if m != nil {
		return m.Check
	}
	return nil
}

func (x *PhoneOtpResend) GetIosDeviceToken() *wrapperspb.StringValue {
	if x, ok := x.GetCheck().(*PhoneOtpResend_IosDeviceToken); ok {
		return x.IosDeviceToken
	}
	return nil
}

func (x *PhoneOtpResend) GetAndroidJws() *wrapperspb.StringValue {
	if x, ok := x.GetCheck().(*PhoneOtpResend_AndroidJws); ok {
		return x.AndroidJws
	}
	return nil
}

type isPhoneOtpResend_Check interface {
	isPhoneOtpResend_Check()
}

type PhoneOtpResend_IosDeviceToken struct {
	IosDeviceToken *wrapperspb.StringValue `protobuf:"bytes,3,opt,name=ios_device_token,json=iosDeviceToken,proto3,oneof"`
}

type PhoneOtpResend_AndroidJws struct {
	AndroidJws *wrapperspb.StringValue `protobuf:"bytes,4,opt,name=android_jws,json=androidJws,proto3,oneof"`
}

func (*PhoneOtpResend_IosDeviceToken) isPhoneOtpResend_Check() {}

func (*PhoneOtpResend_AndroidJws) isPhoneOtpResend_Check() {}

type PhoneOtp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phone        *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"`
	Otp          string                  `protobuf:"bytes,2,opt,name=otp,proto3" json:"otp,omitempty"`
	RefreshToken *wrapperspb.StringValue `protobuf:"bytes,3,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
}

func (x *PhoneOtp) Reset() {
	*x = PhoneOtp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tinder_auth_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhoneOtp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhoneOtp) ProtoMessage() {}

func (x *PhoneOtp) ProtoReflect() protoreflect.Message {
	mi := &file_tinder_auth_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhoneOtp.ProtoReflect.Descriptor instead.
func (*PhoneOtp) Descriptor() ([]byte, []int) {
	return file_tinder_auth_proto_rawDescGZIP(), []int{3}
}

func (x *PhoneOtp) GetPhone() *wrapperspb.StringValue {
	if x != nil {
		return x.Phone
	}
	return nil
}

func (x *PhoneOtp) GetOtp() string {
	if x != nil {
		return x.Otp
	}
	return ""
}

func (x *PhoneOtp) GetRefreshToken() *wrapperspb.StringValue {
	if x != nil {
		return x.RefreshToken
	}
	return nil
}

type Email struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email          string                  `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	RefreshToken   *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	MarketingOptIn *wrapperspb.BoolValue   `protobuf:"bytes,3,opt,name=marketing_opt_in,json=marketingOptIn,proto3" json:"marketing_opt_in,omitempty"`
}

func (x *Email) Reset() {
	*x = Email{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tinder_auth_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Email) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Email) ProtoMessage() {}

func (x *Email) ProtoReflect() protoreflect.Message {
	mi := &file_tinder_auth_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Email.ProtoReflect.Descriptor instead.
func (*Email) Descriptor() ([]byte, []int) {
	return file_tinder_auth_proto_rawDescGZIP(), []int{4}
}

func (x *Email) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Email) GetRefreshToken() *wrapperspb.StringValue {
	if x != nil {
		return x.RefreshToken
	}
	return nil
}

func (x *Email) GetMarketingOptIn() *wrapperspb.BoolValue {
	if x != nil {
		return x.MarketingOptIn
	}
	return nil
}

type EmailOtpResend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email        *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	RefreshToken *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
}

func (x *EmailOtpResend) Reset() {
	*x = EmailOtpResend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tinder_auth_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailOtpResend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailOtpResend) ProtoMessage() {}

func (x *EmailOtpResend) ProtoReflect() protoreflect.Message {
	mi := &file_tinder_auth_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailOtpResend.ProtoReflect.Descriptor instead.
func (*EmailOtpResend) Descriptor() ([]byte, []int) {
	return file_tinder_auth_proto_rawDescGZIP(), []int{5}
}

func (x *EmailOtpResend) GetEmail() *wrapperspb.StringValue {
	if x != nil {
		return x.Email
	}
	return nil
}

func (x *EmailOtpResend) GetRefreshToken() *wrapperspb.StringValue {
	if x != nil {
		return x.RefreshToken
	}
	return nil
}

type GoogleToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExternalToken  string                  `protobuf:"bytes,1,opt,name=external_token,json=externalToken,proto3" json:"external_token,omitempty"`
	RefreshToken   *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	MarketingOptIn *wrapperspb.BoolValue   `protobuf:"bytes,3,opt,name=marketing_opt_in,json=marketingOptIn,proto3" json:"marketing_opt_in,omitempty"`
	UserBehavior   *wrapperspb.BoolValue   `protobuf:"bytes,4,opt,name=user_behavior,json=userBehavior,proto3" json:"user_behavior,omitempty"`
}

func (x *GoogleToken) Reset() {
	*x = GoogleToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tinder_auth_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleToken) ProtoMessage() {}

func (x *GoogleToken) ProtoReflect() protoreflect.Message {
	mi := &file_tinder_auth_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleToken.ProtoReflect.Descriptor instead.
func (*GoogleToken) Descriptor() ([]byte, []int) {
	return file_tinder_auth_proto_rawDescGZIP(), []int{6}
}

func (x *GoogleToken) GetExternalToken() string {
	if x != nil {
		return x.ExternalToken
	}
	return ""
}

func (x *GoogleToken) GetRefreshToken() *wrapperspb.StringValue {
	if x != nil {
		return x.RefreshToken
	}
	return nil
}

func (x *GoogleToken) GetMarketingOptIn() *wrapperspb.BoolValue {
	if x != nil {
		return x.MarketingOptIn
	}
	return nil
}

func (x *GoogleToken) GetUserBehavior() *wrapperspb.BoolValue {
	if x != nil {
		return x.UserBehavior
	}
	return nil
}

type EmailOtp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email        *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Otp          string                  `protobuf:"bytes,2,opt,name=otp,proto3" json:"otp,omitempty"`
	RefreshToken *wrapperspb.StringValue `protobuf:"bytes,3,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
}

func (x *EmailOtp) Reset() {
	*x = EmailOtp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tinder_auth_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailOtp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailOtp) ProtoMessage() {}

func (x *EmailOtp) ProtoReflect() protoreflect.Message {
	mi := &file_tinder_auth_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailOtp.ProtoReflect.Descriptor instead.
func (*EmailOtp) Descriptor() ([]byte, []int) {
	return file_tinder_auth_proto_rawDescGZIP(), []int{7}
}

func (x *EmailOtp) GetEmail() *wrapperspb.StringValue {
	if x != nil {
		return x.Email
	}
	return nil
}

func (x *EmailOtp) GetOtp() string {
	if x != nil {
		return x.Otp
	}
	return ""
}

func (x *EmailOtp) GetRefreshToken() *wrapperspb.StringValue {
	if x != nil {
		return x.RefreshToken
	}
	return nil
}

type AppleToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExternalToken string                  `protobuf:"bytes,1,opt,name=external_token,json=externalToken,proto3" json:"external_token,omitempty"`
	RefreshToken  *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	RawNonce      *wrapperspb.StringValue `protobuf:"bytes,3,opt,name=raw_nonce,json=rawNonce,proto3" json:"raw_nonce,omitempty"`
}

func (x *AppleToken) Reset() {
	*x = AppleToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tinder_auth_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppleToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppleToken) ProtoMessage() {}

func (x *AppleToken) ProtoReflect() protoreflect.Message {
	mi := &file_tinder_auth_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppleToken.ProtoReflect.Descriptor instead.
func (*AppleToken) Descriptor() ([]byte, []int) {
	return file_tinder_auth_proto_rawDescGZIP(), []int{8}
}

func (x *AppleToken) GetExternalToken() string {
	if x != nil {
		return x.ExternalToken
	}
	return ""
}

func (x *AppleToken) GetRefreshToken() *wrapperspb.StringValue {
	if x != nil {
		return x.RefreshToken
	}
	return nil
}

func (x *AppleToken) GetRawNonce() *wrapperspb.StringValue {
	if x != nil {
		return x.RawNonce
	}
	return nil
}

type GetInitialState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RefreshToken *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
}

func (x *GetInitialState) Reset() {
	*x = GetInitialState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tinder_auth_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInitialState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInitialState) ProtoMessage() {}

func (x *GetInitialState) ProtoReflect() protoreflect.Message {
	mi := &file_tinder_auth_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInitialState.ProtoReflect.Descriptor instead.
func (*GetInitialState) Descriptor() ([]byte, []int) {
	return file_tinder_auth_proto_rawDescGZIP(), []int{9}
}

func (x *GetInitialState) GetRefreshToken() *wrapperspb.StringValue {
	if x != nil {
		return x.RefreshToken
	}
	return nil
}

type RefreshAuth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RefreshToken string `protobuf:"bytes,1,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
}

func (x *RefreshAuth) Reset() {
	*x = RefreshAuth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tinder_auth_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshAuth) ProtoMessage() {}

func (x *RefreshAuth) ProtoReflect() protoreflect.Message {
	mi := &file_tinder_auth_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshAuth.ProtoReflect.Descriptor instead.
func (*RefreshAuth) Descriptor() ([]byte, []int) {
	return file_tinder_auth_proto_rawDescGZIP(), []int{10}
}

func (x *RefreshAuth) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

type DismissSocialConnectionList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RefreshToken string `protobuf:"bytes,1,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
}

func (x *DismissSocialConnectionList) Reset() {
	*x = DismissSocialConnectionList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tinder_auth_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DismissSocialConnectionList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DismissSocialConnectionList) ProtoMessage() {}

func (x *DismissSocialConnectionList) ProtoReflect() protoreflect.Message {
	mi := &file_tinder_auth_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DismissSocialConnectionList.ProtoReflect.Descriptor instead.
func (*DismissSocialConnectionList) Descriptor() ([]byte, []int) {
	return file_tinder_auth_proto_rawDescGZIP(), []int{11}
}

func (x *DismissSocialConnectionList) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

type EmailMagicLink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *EmailMagicLink) Reset() {
	*x = EmailMagicLink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tinder_auth_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailMagicLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailMagicLink) ProtoMessage() {}

func (x *EmailMagicLink) ProtoReflect() protoreflect.Message {
	mi := &file_tinder_auth_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailMagicLink.ProtoReflect.Descriptor instead.
func (*EmailMagicLink) Descriptor() ([]byte, []int) {
	return file_tinder_auth_proto_rawDescGZIP(), []int{12}
}

func (x *EmailMagicLink) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type EmailMagicLinkOtp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OtpToken string `protobuf:"bytes,1,opt,name=otp_token,json=otpToken,proto3" json:"otp_token,omitempty"`
}

func (x *EmailMagicLinkOtp) Reset() {
	*x = EmailMagicLinkOtp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tinder_auth_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailMagicLinkOtp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailMagicLinkOtp) ProtoMessage() {}

func (x *EmailMagicLinkOtp) ProtoReflect() protoreflect.Message {
	mi := &file_tinder_auth_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailMagicLinkOtp.ProtoReflect.Descriptor instead.
func (*EmailMagicLinkOtp) Descriptor() ([]byte, []int) {
	return file_tinder_auth_proto_rawDescGZIP(), []int{13}
}

func (x *EmailMagicLinkOtp) GetOtpToken() string {
	if x != nil {
		return x.OtpToken
	}
	return ""
}

type AuthGatewayRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Factor:
	//
	//	*AuthGatewayRequest_Phone
	//	*AuthGatewayRequest_PhoneOtp
	//	*AuthGatewayRequest_Email
	//	*AuthGatewayRequest_GoogleToken
	//	*AuthGatewayRequest_EmailOtp
	//	*AuthGatewayRequest_FacebookToken
	//	*AuthGatewayRequest_PhoneOtpResend
	//	*AuthGatewayRequest_EmailOtpResend
	//	*AuthGatewayRequest_GetInitialState
	//	*AuthGatewayRequest_RefreshAuth
	//	*AuthGatewayRequest_AppleToken
	//	*AuthGatewayRequest_DismissSocialConnectionList
	//	*AuthGatewayRequest_EmailMagicLink
	//	*AuthGatewayRequest_EmailMagicLinkOtp
	Factor isAuthGatewayRequest_Factor `protobuf_oneof:"factor"`
}

func (x *AuthGatewayRequest) Reset() {
	*x = AuthGatewayRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tinder_auth_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthGatewayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthGatewayRequest) ProtoMessage() {}

func (x *AuthGatewayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tinder_auth_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthGatewayRequest.ProtoReflect.Descriptor instead.
func (*AuthGatewayRequest) Descriptor() ([]byte, []int) {
	return file_tinder_auth_proto_rawDescGZIP(), []int{14}
}

func (m *AuthGatewayRequest) GetFactor() isAuthGatewayRequest_Factor {
	if m != nil {
		return m.Factor
	}
	return nil
}

func (x *AuthGatewayRequest) GetPhone() *Phone {
	if x, ok := x.GetFactor().(*AuthGatewayRequest_Phone); ok {
		return x.Phone
	}
	return nil
}

func (x *AuthGatewayRequest) GetPhoneOtp() *PhoneOtp {
	if x, ok := x.GetFactor().(*AuthGatewayRequest_PhoneOtp); ok {
		return x.PhoneOtp
	}
	return nil
}

func (x *AuthGatewayRequest) GetEmail() *Email {
	if x, ok := x.GetFactor().(*AuthGatewayRequest_Email); ok {
		return x.Email
	}
	return nil
}

func (x *AuthGatewayRequest) GetGoogleToken() *GoogleToken {
	if x, ok := x.GetFactor().(*AuthGatewayRequest_GoogleToken); ok {
		return x.GoogleToken
	}
	return nil
}

func (x *AuthGatewayRequest) GetEmailOtp() *EmailOtp {
	if x, ok := x.GetFactor().(*AuthGatewayRequest_EmailOtp); ok {
		return x.EmailOtp
	}
	return nil
}

func (x *AuthGatewayRequest) GetFacebookToken() *FacebookToken {
	if x, ok := x.GetFactor().(*AuthGatewayRequest_FacebookToken); ok {
		return x.FacebookToken
	}
	return nil
}

func (x *AuthGatewayRequest) GetPhoneOtpResend() *PhoneOtpResend {
	if x, ok := x.GetFactor().(*AuthGatewayRequest_PhoneOtpResend); ok {
		return x.PhoneOtpResend
	}
	return nil
}

func (x *AuthGatewayRequest) GetEmailOtpResend() *EmailOtpResend {
	if x, ok := x.GetFactor().(*AuthGatewayRequest_EmailOtpResend); ok {
		return x.EmailOtpResend
	}
	return nil
}

func (x *AuthGatewayRequest) GetGetInitialState() *GetInitialState {
	if x, ok := x.GetFactor().(*AuthGatewayRequest_GetInitialState); ok {
		return x.GetInitialState
	}
	return nil
}

func (x *AuthGatewayRequest) GetRefreshAuth() *RefreshAuth {
	if x, ok := x.GetFactor().(*AuthGatewayRequest_RefreshAuth); ok {
		return x.RefreshAuth
	}
	return nil
}

func (x *AuthGatewayRequest) GetAppleToken() *AppleToken {
	if x, ok := x.GetFactor().(*AuthGatewayRequest_AppleToken); ok {
		return x.AppleToken
	}
	return nil
}

func (x *AuthGatewayRequest) GetDismissSocialConnectionList() *DismissSocialConnectionList {
	if x, ok := x.GetFactor().(*AuthGatewayRequest_DismissSocialConnectionList); ok {
		return x.DismissSocialConnectionList
	}
	return nil
}

func (x *AuthGatewayRequest) GetEmailMagicLink() *EmailMagicLink {
	if x, ok := x.GetFactor().(*AuthGatewayRequest_EmailMagicLink); ok {
		return x.EmailMagicLink
	}
	return nil
}

func (x *AuthGatewayRequest) GetEmailMagicLinkOtp() *EmailMagicLinkOtp {
	if x, ok := x.GetFactor().(*AuthGatewayRequest_EmailMagicLinkOtp); ok {
		return x.EmailMagicLinkOtp
	}
	return nil
}

type isAuthGatewayRequest_Factor interface {
	isAuthGatewayRequest_Factor()
}

type AuthGatewayRequest_Phone struct {
	Phone *Phone `protobuf:"bytes,1,opt,name=phone,proto3,oneof"`
}

type AuthGatewayRequest_PhoneOtp struct {
	PhoneOtp *PhoneOtp `protobuf:"bytes,2,opt,name=phone_otp,json=phoneOtp,proto3,oneof"`
}

type AuthGatewayRequest_Email struct {
	Email *Email `protobuf:"bytes,3,opt,name=email,proto3,oneof"`
}

type AuthGatewayRequest_GoogleToken struct {
	GoogleToken *GoogleToken `protobuf:"bytes,4,opt,name=google_token,json=googleToken,proto3,oneof"`
}

type AuthGatewayRequest_EmailOtp struct {
	EmailOtp *EmailOtp `protobuf:"bytes,5,opt,name=email_otp,json=emailOtp,proto3,oneof"`
}

type AuthGatewayRequest_FacebookToken struct {
	FacebookToken *FacebookToken `protobuf:"bytes,6,opt,name=facebook_token,json=facebookToken,proto3,oneof"`
}

type AuthGatewayRequest_PhoneOtpResend struct {
	PhoneOtpResend *PhoneOtpResend `protobuf:"bytes,7,opt,name=phone_otp_resend,json=phoneOtpResend,proto3,oneof"`
}

type AuthGatewayRequest_EmailOtpResend struct {
	EmailOtpResend *EmailOtpResend `protobuf:"bytes,8,opt,name=email_otp_resend,json=emailOtpResend,proto3,oneof"`
}

type AuthGatewayRequest_GetInitialState struct {
	GetInitialState *GetInitialState `protobuf:"bytes,9,opt,name=get_initial_state,json=getInitialState,proto3,oneof"`
}

type AuthGatewayRequest_RefreshAuth struct {
	RefreshAuth *RefreshAuth `protobuf:"bytes,10,opt,name=refresh_auth,json=refreshAuth,proto3,oneof"`
}

type AuthGatewayRequest_AppleToken struct {
	AppleToken *AppleToken `protobuf:"bytes,11,opt,name=apple_token,json=appleToken,proto3,oneof"`
}

type AuthGatewayRequest_DismissSocialConnectionList struct {
	DismissSocialConnectionList *DismissSocialConnectionList `protobuf:"bytes,12,opt,name=dismiss_social_connection_list,json=dismissSocialConnectionList,proto3,oneof"`
}

type AuthGatewayRequest_EmailMagicLink struct {
	EmailMagicLink *EmailMagicLink `protobuf:"bytes,13,opt,name=email_magic_link,json=emailMagicLink,proto3,oneof"`
}

type AuthGatewayRequest_EmailMagicLinkOtp struct {
	EmailMagicLinkOtp *EmailMagicLinkOtp `protobuf:"bytes,14,opt,name=email_magic_link_otp,json=emailMagicLinkOtp,proto3,oneof"`
}

func (*AuthGatewayRequest_Phone) isAuthGatewayRequest_Factor() {}

func (*AuthGatewayRequest_PhoneOtp) isAuthGatewayRequest_Factor() {}

func (*AuthGatewayRequest_Email) isAuthGatewayRequest_Factor() {}

func (*AuthGatewayRequest_GoogleToken) isAuthGatewayRequest_Factor() {}

func (*AuthGatewayRequest_EmailOtp) isAuthGatewayRequest_Factor() {}

func (*AuthGatewayRequest_FacebookToken) isAuthGatewayRequest_Factor() {}

func (*AuthGatewayRequest_PhoneOtpResend) isAuthGatewayRequest_Factor() {}

func (*AuthGatewayRequest_EmailOtpResend) isAuthGatewayRequest_Factor() {}

func (*AuthGatewayRequest_GetInitialState) isAuthGatewayRequest_Factor() {}

func (*AuthGatewayRequest_RefreshAuth) isAuthGatewayRequest_Factor() {}

func (*AuthGatewayRequest_AppleToken) isAuthGatewayRequest_Factor() {}

func (*AuthGatewayRequest_DismissSocialConnectionList) isAuthGatewayRequest_Factor() {}

func (*AuthGatewayRequest_EmailMagicLink) isAuthGatewayRequest_Factor() {}

func (*AuthGatewayRequest_EmailMagicLinkOtp) isAuthGatewayRequest_Factor() {}

type Verification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	State string `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *Verification) Reset() {
	*x = Verification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tinder_auth_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Verification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Verification) ProtoMessage() {}

func (x *Verification) ProtoReflect() protoreflect.Message {
	mi := &file_tinder_auth_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Verification.ProtoReflect.Descriptor instead.
func (*Verification) Descriptor() ([]byte, []int) {
	return file_tinder_auth_proto_rawDescGZIP(), []int{15}
}

func (x *Verification) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Verification) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type UnderageBan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnderageTtlDurationMs *wrapperspb.Int64Value  `protobuf:"bytes,1,opt,name=underage_ttl_duration_ms,json=underageTtlDurationMs,proto3" json:"underage_ttl_duration_ms,omitempty"`
	UnderageToken         *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=underage_token,json=underageToken,proto3" json:"underage_token,omitempty"`
	Verification          *Verification           `protobuf:"bytes,3,opt,name=verification,proto3" json:"verification,omitempty"`
	IsOnboarding          *wrapperspb.BoolValue   `protobuf:"bytes,4,opt,name=is_onboarding,json=isOnboarding,proto3" json:"is_onboarding,omitempty"`
}

func (x *UnderageBan) Reset() {
	*x = UnderageBan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tinder_auth_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnderageBan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnderageBan) ProtoMessage() {}

func (x *UnderageBan) ProtoReflect() protoreflect.Message {
	mi := &file_tinder_auth_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnderageBan.ProtoReflect.Descriptor instead.
func (*UnderageBan) Descriptor() ([]byte, []int) {
	return file_tinder_auth_proto_rawDescGZIP(), []int{16}
}

func (x *UnderageBan) GetUnderageTtlDurationMs() *wrapperspb.Int64Value {
	if x != nil {
		return x.UnderageTtlDurationMs
	}
	return nil
}

func (x *UnderageBan) GetUnderageToken() *wrapperspb.StringValue {
	if x != nil {
		return x.UnderageToken
	}
	return nil
}

func (x *UnderageBan) GetVerification() *Verification {
	if x != nil {
		return x.Verification
	}
	return nil
}

func (x *UnderageBan) GetIsOnboarding() *wrapperspb.BoolValue {
	if x != nil {
		return x.IsOnboarding
	}
	return nil
}

type BanAppeal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChallengeType  string `protobuf:"bytes,1,opt,name=challenge_type,json=challengeType,proto3" json:"challenge_type,omitempty"`
	ChallengeToken string `protobuf:"bytes,2,opt,name=challenge_token,json=challengeToken,proto3" json:"challenge_token,omitempty"`
	RefreshToken   string `protobuf:"bytes,3,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
}

func (x *BanAppeal) Reset() {
	*x = BanAppeal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tinder_auth_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BanAppeal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BanAppeal) ProtoMessage() {}

func (x *BanAppeal) ProtoReflect() protoreflect.Message {
	mi := &file_tinder_auth_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BanAppeal.ProtoReflect.Descriptor instead.
func (*BanAppeal) Descriptor() ([]byte, []int) {
	return file_tinder_auth_proto_rawDescGZIP(), []int{17}
}

func (x *BanAppeal) GetChallengeType() string {
	if x != nil {
		return x.ChallengeType
	}
	return ""
}

func (x *BanAppeal) GetChallengeToken() string {
	if x != nil {
		return x.ChallengeToken
	}
	return ""
}

func (x *BanAppeal) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

type BanReason struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Reason:
	//
	//	*BanReason_UnderageBan
	//	*BanReason_BanAppeal
	Reason isBanReason_Reason `protobuf_oneof:"reason"`
}

func (x *BanReason) Reset() {
	*x = BanReason{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tinder_auth_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BanReason) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BanReason) ProtoMessage() {}

func (x *BanReason) ProtoReflect() protoreflect.Message {
	mi := &file_tinder_auth_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BanReason.ProtoReflect.Descriptor instead.
func (*BanReason) Descriptor() ([]byte, []int) {
	return file_tinder_auth_proto_rawDescGZIP(), []int{18}
}

func (m *BanReason) GetReason() isBanReason_Reason {
	if m != nil {
		return m.Reason
	}
	return nil
}

func (x *BanReason) GetUnderageBan() *UnderageBan {
	if x, ok := x.GetReason().(*BanReason_UnderageBan); ok {
		return x.UnderageBan
	}
	return nil
}

func (x *BanReason) GetBanAppeal() *BanAppeal {
	if x, ok := x.GetReason().(*BanReason_BanAppeal); ok {
		return x.BanAppeal
	}
	return nil
}

type isBanReason_Reason interface {
	isBanReason_Reason()
}

type BanReason_UnderageBan struct {
	UnderageBan *UnderageBan `protobuf:"bytes,1,opt,name=underage_ban,json=underageBan,proto3,oneof"`
}

type BanReason_BanAppeal struct {
	BanAppeal *BanAppeal `protobuf:"bytes,2,opt,name=ban_appeal,json=banAppeal,proto3,oneof"`
}

func (*BanReason_UnderageBan) isBanReason_Reason() {}

func (*BanReason_BanAppeal) isBanReason_Reason() {}

type GetPhoneState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RefreshToken *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
}

func (x *GetPhoneState) Reset() {
	*x = GetPhoneState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tinder_auth_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPhoneState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPhoneState) ProtoMessage() {}

func (x *GetPhoneState) ProtoReflect() protoreflect.Message {
	mi := &file_tinder_auth_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPhoneState.ProtoReflect.Descriptor instead.
func (*GetPhoneState) Descriptor() ([]byte, []int) {
	return file_tinder_auth_proto_rawDescGZIP(), []int{19}
}

func (x *GetPhoneState) GetRefreshToken() *wrapperspb.StringValue {
	if x != nil {
		return x.RefreshToken
	}
	return nil
}

type ValidatePhoneOtpState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RefreshToken *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	Phone        string                  `protobuf:"bytes,2,opt,name=phone,proto3" json:"phone,omitempty"`
	OtpLength    *wrapperspb.Int32Value  `protobuf:"bytes,3,opt,name=otp_length,json=otpLength,proto3" json:"otp_length,omitempty"`
	SmsSent      *wrapperspb.BoolValue   `protobuf:"bytes,4,opt,name=sms_sent,json=smsSent,proto3" json:"sms_sent,omitempty"`
}

func (x *ValidatePhoneOtpState) Reset() {
	*x = ValidatePhoneOtpState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tinder_auth_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidatePhoneOtpState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidatePhoneOtpState) ProtoMessage() {}

func (x *ValidatePhoneOtpState) ProtoReflect() protoreflect.Message {
	mi := &file_tinder_auth_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidatePhoneOtpState.ProtoReflect.Descriptor instead.
func (*ValidatePhoneOtpState) Descriptor() ([]byte, []int) {
	return file_tinder_auth_proto_rawDescGZIP(), []int{20}
}

func (x *ValidatePhoneOtpState) GetRefreshToken() *wrapperspb.StringValue {
	if x != nil {
		return x.RefreshToken
	}
	return nil
}

func (x *ValidatePhoneOtpState) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *ValidatePhoneOtpState) GetOtpLength() *wrapperspb.Int32Value {
	if x != nil {
		return x.OtpLength
	}
	return nil
}

func (x *ValidatePhoneOtpState) GetSmsSent() *wrapperspb.BoolValue {
	if x != nil {
		return x.SmsSent
	}
	return nil
}

type EmailMarketing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShowMarketingOptIn *wrapperspb.BoolValue `protobuf:"bytes,2,opt,name=show_marketing_opt_in,json=showMarketingOptIn,proto3" json:"show_marketing_opt_in,omitempty"`
	ShowStrictOptIn    *wrapperspb.BoolValue `protobuf:"bytes,3,opt,name=show_strict_opt_in,json=showStrictOptIn,proto3" json:"show_strict_opt_in,omitempty"`
	CheckedByDefault   *wrapperspb.BoolValue `protobuf:"bytes,4,opt,name=checked_by_default,json=checkedByDefault,proto3" json:"checked_by_default,omitempty"`
}

func (x *EmailMarketing) Reset() {
	*x = EmailMarketing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tinder_auth_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailMarketing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailMarketing) ProtoMessage() {}

func (x *EmailMarketing) ProtoReflect() protoreflect.Message {
	mi := &file_tinder_auth_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailMarketing.ProtoReflect.Descriptor instead.
func (*EmailMarketing) Descriptor() ([]byte, []int) {
	return file_tinder_auth_proto_rawDescGZIP(), []int{21}
}

func (x *EmailMarketing) GetShowMarketingOptIn() *wrapperspb.BoolValue {
	if x != nil {
		return x.ShowMarketingOptIn
	}
	return nil
}

func (x *EmailMarketing) GetShowStrictOptIn() *wrapperspb.BoolValue {
	if x != nil {
		return x.ShowStrictOptIn
	}
	return nil
}

func (x *EmailMarketing) GetCheckedByDefault() *wrapperspb.BoolValue {
	if x != nil {
		return x.CheckedByDefault
	}
	return nil
}

type GetEmailState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RefreshToken   *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	EmailMarketing *EmailMarketing         `protobuf:"bytes,2,opt,name=email_marketing,json=emailMarketing,proto3" json:"email_marketing,omitempty"`
}

func (x *GetEmailState) Reset() {
	*x = GetEmailState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tinder_auth_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEmailState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEmailState) ProtoMessage() {}

func (x *GetEmailState) ProtoReflect() protoreflect.Message {
	mi := &file_tinder_auth_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEmailState.ProtoReflect.Descriptor instead.
func (*GetEmailState) Descriptor() ([]byte, []int) {
	return file_tinder_auth_proto_rawDescGZIP(), []int{22}
}

func (x *GetEmailState) GetRefreshToken() *wrapperspb.StringValue {
	if x != nil {
		return x.RefreshToken
	}
	return nil
}

func (x *GetEmailState) GetEmailMarketing() *EmailMarketing {
	if x != nil {
		return x.EmailMarketing
	}
	return nil
}

type ValidateEmailOtpState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RefreshToken   *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	OtpLength      *wrapperspb.Int32Value  `protobuf:"bytes,4,opt,name=otp_length,json=otpLength,proto3" json:"otp_length,omitempty"`
	EmailSent      *wrapperspb.BoolValue   `protobuf:"bytes,5,opt,name=email_sent,json=emailSent,proto3" json:"email_sent,omitempty"`
	EmailMarketing *EmailMarketing         `protobuf:"bytes,6,opt,name=email_marketing,json=emailMarketing,proto3" json:"email_marketing,omitempty"`
	// Types that are assignable to Email:
	//
	//	*ValidateEmailOtpState_UnmaskedEmail
	//	*ValidateEmailOtpState_MaskedEmail
	Email isValidateEmailOtpState_Email `protobuf_oneof:"email"`
}

func (x *ValidateEmailOtpState) Reset() {
	*x = ValidateEmailOtpState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tinder_auth_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateEmailOtpState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateEmailOtpState) ProtoMessage() {}

func (x *ValidateEmailOtpState) ProtoReflect() protoreflect.Message {
	mi := &file_tinder_auth_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateEmailOtpState.ProtoReflect.Descriptor instead.
func (*ValidateEmailOtpState) Descriptor() ([]byte, []int) {
	return file_tinder_auth_proto_rawDescGZIP(), []int{23}
}

func (x *ValidateEmailOtpState) GetRefreshToken() *wrapperspb.StringValue {
	if x != nil {
		return x.RefreshToken
	}
	return nil
}

func (x *ValidateEmailOtpState) GetOtpLength() *wrapperspb.Int32Value {
	if x != nil {
		return x.OtpLength
	}
	return nil
}

func (x *ValidateEmailOtpState) GetEmailSent() *wrapperspb.BoolValue {
	if x != nil {
		return x.EmailSent
	}
	return nil
}

func (x *ValidateEmailOtpState) GetEmailMarketing() *EmailMarketing {
	if x != nil {
		return x.EmailMarketing
	}
	return nil
}

func (m *ValidateEmailOtpState) GetEmail() isValidateEmailOtpState_Email {
	if m != nil {
		return m.Email
	}
	return nil
}

func (x *ValidateEmailOtpState) GetUnmaskedEmail() string {
	if x, ok := x.GetEmail().(*ValidateEmailOtpState_UnmaskedEmail); ok {
		return x.UnmaskedEmail
	}
	return ""
}

func (x *ValidateEmailOtpState) GetMaskedEmail() string {
	if x, ok := x.GetEmail().(*ValidateEmailOtpState_MaskedEmail); ok {
		return x.MaskedEmail
	}
	return ""
}

type isValidateEmailOtpState_Email interface {
	isValidateEmailOtpState_Email()
}

type ValidateEmailOtpState_UnmaskedEmail struct {
	UnmaskedEmail string `protobuf:"bytes,2,opt,name=unmasked_email,json=unmaskedEmail,proto3,oneof"`
}

type ValidateEmailOtpState_MaskedEmail struct {
	MaskedEmail string `protobuf:"bytes,3,opt,name=masked_email,json=maskedEmail,proto3,oneof"`
}

func (*ValidateEmailOtpState_UnmaskedEmail) isValidateEmailOtpState_Email() {}

func (*ValidateEmailOtpState_MaskedEmail) isValidateEmailOtpState_Email() {}

type OnboardingState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RefreshToken    string                  `protobuf:"bytes,1,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	OnboardingToken string                  `protobuf:"bytes,2,opt,name=onboarding_token,json=onboardingToken,proto3" json:"onboarding_token,omitempty"`
	UserId          *wrapperspb.StringValue `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *OnboardingState) Reset() {
	*x = OnboardingState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tinder_auth_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnboardingState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnboardingState) ProtoMessage() {}

func (x *OnboardingState) ProtoReflect() protoreflect.Message {
	mi := &file_tinder_auth_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnboardingState.ProtoReflect.Descriptor instead.
func (*OnboardingState) Descriptor() ([]byte, []int) {
	return file_tinder_auth_proto_rawDescGZIP(), []int{24}
}

func (x *OnboardingState) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *OnboardingState) GetOnboardingToken() string {
	if x != nil {
		return x.OnboardingToken
	}
	return ""
}

func (x *OnboardingState) GetUserId() *wrapperspb.StringValue {
	if x != nil {
		return x.UserId
	}
	return nil
}

type LoginResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RefreshToken string                 `protobuf:"bytes,1,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	AuthToken    string                 `protobuf:"bytes,2,opt,name=auth_token,json=authToken,proto3" json:"auth_token,omitempty"`
	Captcha      LoginResult_Captcha    `protobuf:"varint,3,opt,name=captcha,proto3,enum=binary.LoginResult_Captcha" json:"captcha,omitempty"`
	UserId       string                 `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	AuthTokenTtl *wrapperspb.Int64Value `protobuf:"bytes,5,opt,name=auth_token_ttl,json=authTokenTtl,proto3" json:"auth_token_ttl,omitempty"`
}

func (x *LoginResult) Reset() {
	*x = LoginResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tinder_auth_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResult) ProtoMessage() {}

func (x *LoginResult) ProtoReflect() protoreflect.Message {
	mi := &file_tinder_auth_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResult.ProtoReflect.Descriptor instead.
func (*LoginResult) Descriptor() ([]byte, []int) {
	return file_tinder_auth_proto_rawDescGZIP(), []int{25}
}

func (x *LoginResult) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *LoginResult) GetAuthToken() string {
	if x != nil {
		return x.AuthToken
	}
	return ""
}

func (x *LoginResult) GetCaptcha() LoginResult_Captcha {
	if x != nil {
		return x.Captcha
	}
	return LoginResult_CAPTCHA_INVALID
}

func (x *LoginResult) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *LoginResult) GetAuthTokenTtl() *wrapperspb.Int64Value {
	if x != nil {
		return x.AuthTokenTtl
	}
	return nil
}

type AppleAccountNotFound struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WillLink     bool                    `protobuf:"varint,1,opt,name=will_link,json=willLink,proto3" json:"will_link,omitempty"`
	RefreshToken *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
}

func (x *AppleAccountNotFound) Reset() {
	*x = AppleAccountNotFound{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tinder_auth_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppleAccountNotFound) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppleAccountNotFound) ProtoMessage() {}

func (x *AppleAccountNotFound) ProtoReflect() protoreflect.Message {
	mi := &file_tinder_auth_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppleAccountNotFound.ProtoReflect.Descriptor instead.
func (*AppleAccountNotFound) Descriptor() ([]byte, []int) {
	return file_tinder_auth_proto_rawDescGZIP(), []int{26}
}

func (x *AppleAccountNotFound) GetWillLink() bool {
	if x != nil {
		return x.WillLink
	}
	return false
}

func (x *AppleAccountNotFound) GetRefreshToken() *wrapperspb.StringValue {
	if x != nil {
		return x.RefreshToken
	}
	return nil
}

type SocialConnection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Service SocialConnection_Service `protobuf:"varint,1,opt,name=service,proto3,enum=binary.SocialConnection_Service" json:"service,omitempty"`
}

func (x *SocialConnection) Reset() {
	*x = SocialConnection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tinder_auth_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SocialConnection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SocialConnection) ProtoMessage() {}

func (x *SocialConnection) ProtoReflect() protoreflect.Message {
	mi := &file_tinder_auth_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SocialConnection.ProtoReflect.Descriptor instead.
func (*SocialConnection) Descriptor() ([]byte, []int) {
	return file_tinder_auth_proto_rawDescGZIP(), []int{27}
}

func (x *SocialConnection) GetService() SocialConnection_Service {
	if x != nil {
		return x.Service
	}
	return SocialConnection_SERVICE_INVALID
}

type SocialConnectionList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RefreshToken *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	Connections  []*SocialConnection     `protobuf:"bytes,2,rep,name=connections,proto3" json:"connections,omitempty"`
}

func (x *SocialConnectionList) Reset() {
	*x = SocialConnectionList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tinder_auth_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SocialConnectionList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SocialConnectionList) ProtoMessage() {}

func (x *SocialConnectionList) ProtoReflect() protoreflect.Message {
	mi := &file_tinder_auth_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SocialConnectionList.ProtoReflect.Descriptor instead.
func (*SocialConnectionList) Descriptor() ([]byte, []int) {
	return file_tinder_auth_proto_rawDescGZIP(), []int{28}
}

func (x *SocialConnectionList) GetRefreshToken() *wrapperspb.StringValue {
	if x != nil {
		return x.RefreshToken
	}
	return nil
}

func (x *SocialConnectionList) GetConnections() []*SocialConnection {
	if x != nil {
		return x.Connections
	}
	return nil
}

type ValidateEmailMagicLinkOtpState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ValidateEmailMagicLinkOtpState) Reset() {
	*x = ValidateEmailMagicLinkOtpState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tinder_auth_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateEmailMagicLinkOtpState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateEmailMagicLinkOtpState) ProtoMessage() {}

func (x *ValidateEmailMagicLinkOtpState) ProtoReflect() protoreflect.Message {
	mi := &file_tinder_auth_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateEmailMagicLinkOtpState.ProtoReflect.Descriptor instead.
func (*ValidateEmailMagicLinkOtpState) Descriptor() ([]byte, []int) {
	return file_tinder_auth_proto_rawDescGZIP(), []int{29}
}

type ErrorProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message   string     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	BanReason *BanReason `protobuf:"bytes,3,opt,name=ban_reason,json=banReason,proto3" json:"ban_reason,omitempty"`
}

func (x *ErrorProto) Reset() {
	*x = ErrorProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tinder_auth_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorProto) ProtoMessage() {}

func (x *ErrorProto) ProtoReflect() protoreflect.Message {
	mi := &file_tinder_auth_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorProto.ProtoReflect.Descriptor instead.
func (*ErrorProto) Descriptor() ([]byte, []int) {
	return file_tinder_auth_proto_rawDescGZIP(), []int{30}
}

func (x *ErrorProto) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ErrorProto) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ErrorProto) GetBanReason() *BanReason {
	if x != nil {
		return x.BanReason
	}
	return nil
}

type MetaProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpstreamTime *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=upstream_time,json=upstreamTime,proto3" json:"upstream_time,omitempty"`
	StartTime    *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
}

func (x *MetaProto) Reset() {
	*x = MetaProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tinder_auth_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetaProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetaProto) ProtoMessage() {}

func (x *MetaProto) ProtoReflect() protoreflect.Message {
	mi := &file_tinder_auth_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetaProto.ProtoReflect.Descriptor instead.
func (*MetaProto) Descriptor() ([]byte, []int) {
	return file_tinder_auth_proto_rawDescGZIP(), []int{31}
}

func (x *MetaProto) GetUpstreamTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpstreamTime
	}
	return nil
}

func (x *MetaProto) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

type AuthGatewayResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta  *MetaProto  `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	Error *ErrorProto `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	// Types that are assignable to Data:
	//
	//	*AuthGatewayResponse_GetPhoneState
	//	*AuthGatewayResponse_ValidatePhoneOtpState
	//	*AuthGatewayResponse_GetEmailState
	//	*AuthGatewayResponse_ValidateEmailOtpState
	//	*AuthGatewayResponse_OnboardingState
	//	*AuthGatewayResponse_LoginResult
	//	*AuthGatewayResponse_SocialConnectionList
	//	*AuthGatewayResponse_AppleAccountNotFound
	//	*AuthGatewayResponse_ValidateEmailMagicLinkOtpState
	Data isAuthGatewayResponse_Data `protobuf_oneof:"data"`
}

func (x *AuthGatewayResponse) Reset() {
	*x = AuthGatewayResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tinder_auth_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthGatewayResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthGatewayResponse) ProtoMessage() {}

func (x *AuthGatewayResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tinder_auth_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthGatewayResponse.ProtoReflect.Descriptor instead.
func (*AuthGatewayResponse) Descriptor() ([]byte, []int) {
	return file_tinder_auth_proto_rawDescGZIP(), []int{32}
}

func (x *AuthGatewayResponse) GetMeta() *MetaProto {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *AuthGatewayResponse) GetError() *ErrorProto {
	if x != nil {
		return x.Error
	}
	return nil
}

func (m *AuthGatewayResponse) GetData() isAuthGatewayResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *AuthGatewayResponse) GetGetPhoneState() *GetPhoneState {
	if x, ok := x.GetData().(*AuthGatewayResponse_GetPhoneState); ok {
		return x.GetPhoneState
	}
	return nil
}

func (x *AuthGatewayResponse) GetValidatePhoneOtpState() *ValidatePhoneOtpState {
	if x, ok := x.GetData().(*AuthGatewayResponse_ValidatePhoneOtpState); ok {
		return x.ValidatePhoneOtpState
	}
	return nil
}

func (x *AuthGatewayResponse) GetGetEmailState() *GetEmailState {
	if x, ok := x.GetData().(*AuthGatewayResponse_GetEmailState); ok {
		return x.GetEmailState
	}
	return nil
}

func (x *AuthGatewayResponse) GetValidateEmailOtpState() *ValidateEmailOtpState {
	if x, ok := x.GetData().(*AuthGatewayResponse_ValidateEmailOtpState); ok {
		return x.ValidateEmailOtpState
	}
	return nil
}

func (x *AuthGatewayResponse) GetOnboardingState() *OnboardingState {
	if x, ok := x.GetData().(*AuthGatewayResponse_OnboardingState); ok {
		return x.OnboardingState
	}
	return nil
}

func (x *AuthGatewayResponse) GetLoginResult() *LoginResult {
	if x, ok := x.GetData().(*AuthGatewayResponse_LoginResult); ok {
		return x.LoginResult
	}
	return nil
}

func (x *AuthGatewayResponse) GetSocialConnectionList() *SocialConnectionList {
	if x, ok := x.GetData().(*AuthGatewayResponse_SocialConnectionList); ok {
		return x.SocialConnectionList
	}
	return nil
}

func (x *AuthGatewayResponse) GetAppleAccountNotFound() *AppleAccountNotFound {
	if x, ok := x.GetData().(*AuthGatewayResponse_AppleAccountNotFound); ok {
		return x.AppleAccountNotFound
	}
	return nil
}

func (x *AuthGatewayResponse) GetValidateEmailMagicLinkOtpState() *ValidateEmailMagicLinkOtpState {
	if x, ok := x.GetData().(*AuthGatewayResponse_ValidateEmailMagicLinkOtpState); ok {
		return x.ValidateEmailMagicLinkOtpState
	}
	return nil
}

type isAuthGatewayResponse_Data interface {
	isAuthGatewayResponse_Data()
}

type AuthGatewayResponse_GetPhoneState struct {
	GetPhoneState *GetPhoneState `protobuf:"bytes,3,opt,name=get_phone_state,json=getPhoneState,proto3,oneof"`
}

type AuthGatewayResponse_ValidatePhoneOtpState struct {
	ValidatePhoneOtpState *ValidatePhoneOtpState `protobuf:"bytes,4,opt,name=validate_phone_otp_state,json=validatePhoneOtpState,proto3,oneof"`
}

type AuthGatewayResponse_GetEmailState struct {
	GetEmailState *GetEmailState `protobuf:"bytes,5,opt,name=get_email_state,json=getEmailState,proto3,oneof"`
}

type AuthGatewayResponse_ValidateEmailOtpState struct {
	ValidateEmailOtpState *ValidateEmailOtpState `protobuf:"bytes,6,opt,name=validate_email_otp_state,json=validateEmailOtpState,proto3,oneof"`
}

type AuthGatewayResponse_OnboardingState struct {
	OnboardingState *OnboardingState `protobuf:"bytes,7,opt,name=onboarding_state,json=onboardingState,proto3,oneof"`
}

type AuthGatewayResponse_LoginResult struct {
	LoginResult *LoginResult `protobuf:"bytes,8,opt,name=login_result,json=loginResult,proto3,oneof"`
}

type AuthGatewayResponse_SocialConnectionList struct {
	SocialConnectionList *SocialConnectionList `protobuf:"bytes,9,opt,name=social_connection_list,json=socialConnectionList,proto3,oneof"`
}

type AuthGatewayResponse_AppleAccountNotFound struct {
	AppleAccountNotFound *AppleAccountNotFound `protobuf:"bytes,10,opt,name=apple_account_not_found,json=appleAccountNotFound,proto3,oneof"`
}

type AuthGatewayResponse_ValidateEmailMagicLinkOtpState struct {
	ValidateEmailMagicLinkOtpState *ValidateEmailMagicLinkOtpState `protobuf:"bytes,11,opt,name=validate_email_magic_link_otp_state,json=validateEmailMagicLinkOtpState,proto3,oneof"`
}

func (*AuthGatewayResponse_GetPhoneState) isAuthGatewayResponse_Data() {}

func (*AuthGatewayResponse_ValidatePhoneOtpState) isAuthGatewayResponse_Data() {}

func (*AuthGatewayResponse_GetEmailState) isAuthGatewayResponse_Data() {}

func (*AuthGatewayResponse_ValidateEmailOtpState) isAuthGatewayResponse_Data() {}

func (*AuthGatewayResponse_OnboardingState) isAuthGatewayResponse_Data() {}

func (*AuthGatewayResponse_LoginResult) isAuthGatewayResponse_Data() {}

func (*AuthGatewayResponse_SocialConnectionList) isAuthGatewayResponse_Data() {}

func (*AuthGatewayResponse_AppleAccountNotFound) isAuthGatewayResponse_Data() {}

func (*AuthGatewayResponse_ValidateEmailMagicLinkOtpState) isAuthGatewayResponse_Data() {}

var File_tinder_auth_proto protoreflect.FileDescriptor

var file_tinder_auth_proto_rawDesc = []byte{
	0x0a, 0x11, 0x74, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x06, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72,
	0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x79, 0x0a, 0x0d,
	0x46, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x25, 0x0a,
	0x0e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x41, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65,
	0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xb9, 0x02, 0x0a, 0x05, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x41, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65,
	0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x72, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x43, 0x0a, 0x0d, 0x63, 0x61,
	0x70, 0x74, 0x63, 0x68, 0x61, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48,
	0x00, 0x52, 0x0c, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x48, 0x0a, 0x10, 0x69, 0x6f, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x69, 0x6f, 0x73, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x3f, 0x0a, 0x0b, 0x61, 0x6e, 0x64,
	0x72, 0x6f, 0x69, 0x64, 0x5f, 0x6a, 0x77, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x0a,
	0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x4a, 0x77, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x22, 0x9b, 0x02, 0x0a, 0x0e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4f, 0x74, 0x70,
	0x52, 0x65, 0x73, 0x65, 0x6e, 0x64, 0x12, 0x32, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x41, 0x0a, 0x0d, 0x72, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x48, 0x0a,
	0x10, 0x69, 0x6f, 0x73, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x69, 0x6f, 0x73, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x3f, 0x0a, 0x0b, 0x61, 0x6e, 0x64, 0x72, 0x6f,
	0x69, 0x64, 0x5f, 0x6a, 0x77, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x61, 0x6e,
	0x64, 0x72, 0x6f, 0x69, 0x64, 0x4a, 0x77, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x22, 0x93, 0x01, 0x0a, 0x08, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4f, 0x74, 0x70, 0x12, 0x32,
	0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x74, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6f, 0x74, 0x70, 0x12, 0x41, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65,
	0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xa6, 0x01, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x41, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65,
	0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x72, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x44, 0x0a, 0x10, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x6f, 0x70, 0x74, 0x5f, 0x69, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x0e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x49, 0x6e,
	0x22, 0x87, 0x01, 0x0a, 0x0e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4f, 0x74, 0x70, 0x52, 0x65, 0x73,
	0x65, 0x6e, 0x64, 0x12, 0x32, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x41, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65,
	0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x72, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xfe, 0x01, 0x0a, 0x0b, 0x47,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x41, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x44, 0x0a, 0x10, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e,
	0x67, 0x5f, 0x6f, 0x70, 0x74, 0x5f, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0e, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x49, 0x6e, 0x12, 0x3f, 0x0a, 0x0d, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x75,
	0x73, 0x65, 0x72, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x22, 0x93, 0x01, 0x0a, 0x08,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4f, 0x74, 0x70, 0x12, 0x32, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x10, 0x0a, 0x03,
	0x6f, 0x74, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6f, 0x74, 0x70, 0x12, 0x41,
	0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x22, 0xb1, 0x01, 0x0a, 0x0a, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x25, 0x0a, 0x0e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x41, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65,
	0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x72, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x39, 0x0a, 0x09, 0x72, 0x61,
	0x77, 0x5f, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x72, 0x61, 0x77,
	0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x22, 0x54, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x69, 0x74,
	0x69, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x41, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x72,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x32, 0x0a, 0x0b, 0x52,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x41, 0x75, 0x74, 0x68, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0x42, 0x0a, 0x1b, 0x44, 0x69, 0x73, 0x6d, 0x69, 0x73, 0x73, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x23,
	0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x22, 0x26, 0x0a, 0x0e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x61, 0x67, 0x69,
	0x63, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x30, 0x0a, 0x11, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x4c, 0x69, 0x6e, 0x6b, 0x4f, 0x74, 0x70,
	0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x74, 0x70, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x74, 0x70, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x86, 0x07,
	0x0a, 0x12, 0x41, 0x75, 0x74, 0x68, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x2e, 0x50, 0x68, 0x6f,
	0x6e, 0x65, 0x48, 0x00, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x2f, 0x0a, 0x09, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6f, 0x74, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x2e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4f, 0x74, 0x70,
	0x48, 0x00, 0x52, 0x08, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4f, 0x74, 0x70, 0x12, 0x25, 0x0a, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x62, 0x69,
	0x6e, 0x61, 0x72, 0x79, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x48, 0x00, 0x52, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x38, 0x0a, 0x0c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x62, 0x69, 0x6e, 0x61,
	0x72, 0x79, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x48, 0x00,
	0x52, 0x0b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2f, 0x0a,
	0x09, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x6f, 0x74, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4f,
	0x74, 0x70, 0x48, 0x00, 0x52, 0x08, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x4f, 0x74, 0x70, 0x12, 0x3e,
	0x0a, 0x0e, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x2e,
	0x46, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x48, 0x00, 0x52,
	0x0d, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x42,
	0x0a, 0x10, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6f, 0x74, 0x70, 0x5f, 0x72, 0x65, 0x73, 0x65,
	0x6e, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x69, 0x6e, 0x61, 0x72,
	0x79, 0x2e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4f, 0x74, 0x70, 0x52, 0x65, 0x73, 0x65, 0x6e, 0x64,
	0x48, 0x00, 0x52, 0x0e, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4f, 0x74, 0x70, 0x52, 0x65, 0x73, 0x65,
	0x6e, 0x64, 0x12, 0x42, 0x0a, 0x10, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x6f, 0x74, 0x70, 0x5f,
	0x72, 0x65, 0x73, 0x65, 0x6e, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62,
	0x69, 0x6e, 0x61, 0x72, 0x79, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4f, 0x74, 0x70, 0x52, 0x65,
	0x73, 0x65, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x0e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x4f, 0x74, 0x70,
	0x52, 0x65, 0x73, 0x65, 0x6e, 0x64, 0x12, 0x45, 0x0a, 0x11, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e,
	0x69, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0f, 0x67, 0x65,
	0x74, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x38, 0x0a,
	0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x41, 0x75, 0x74, 0x68, 0x48, 0x00, 0x52, 0x0b, 0x72, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x41, 0x75, 0x74, 0x68, 0x12, 0x35, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x65,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62,
	0x69, 0x6e, 0x61, 0x72, 0x79, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x48, 0x00, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x6c, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x6a,
	0x0a, 0x1e, 0x64, 0x69, 0x73, 0x6d, 0x69, 0x73, 0x73, 0x5f, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c,
	0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x2e,
	0x44, 0x69, 0x73, 0x6d, 0x69, 0x73, 0x73, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x1b, 0x64,
	0x69, 0x73, 0x6d, 0x69, 0x73, 0x73, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x10, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x5f, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x2e, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x4c, 0x69, 0x6e, 0x6b, 0x48, 0x00, 0x52, 0x0e,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x4c,
	0x0a, 0x14, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x5f, 0x6c, 0x69,
	0x6e, 0x6b, 0x5f, 0x6f, 0x74, 0x70, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62,
	0x69, 0x6e, 0x61, 0x72, 0x79, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x61, 0x67, 0x69, 0x63,
	0x4c, 0x69, 0x6e, 0x6b, 0x4f, 0x74, 0x70, 0x48, 0x00, 0x52, 0x11, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x4d, 0x61, 0x67, 0x69, 0x63, 0x4c, 0x69, 0x6e, 0x6b, 0x4f, 0x74, 0x70, 0x42, 0x08, 0x0a, 0x06,
	0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x22, 0x38, 0x0a, 0x0c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x22, 0xa3, 0x02, 0x0a, 0x0b, 0x55, 0x6e, 0x64, 0x65, 0x72, 0x61, 0x67, 0x65, 0x42, 0x61, 0x6e,
	0x12, 0x54, 0x0a, 0x18, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x74, 0x6c,
	0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x15, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x61, 0x67, 0x65, 0x54, 0x74, 0x6c, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x73, 0x12, 0x43, 0x0a, 0x0e, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x61,
	0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0d, 0x75, 0x6e,
	0x64, 0x65, 0x72, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x38, 0x0a, 0x0c, 0x76,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x6f, 0x6e, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42,
	0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x69, 0x73, 0x4f, 0x6e, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x22, 0x80, 0x01, 0x0a, 0x09, 0x42, 0x61, 0x6e, 0x41, 0x70,
	0x70, 0x65, 0x61, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x68,
	0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63,
	0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x83, 0x01, 0x0a, 0x09, 0x42, 0x61,
	0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x0c, 0x75, 0x6e, 0x64, 0x65, 0x72,
	0x61, 0x67, 0x65, 0x5f, 0x62, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x2e, 0x55, 0x6e, 0x64, 0x65, 0x72, 0x61, 0x67, 0x65, 0x42,
	0x61, 0x6e, 0x48, 0x00, 0x52, 0x0b, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x61, 0x67, 0x65, 0x42, 0x61,
	0x6e, 0x12, 0x32, 0x0a, 0x0a, 0x62, 0x61, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x65, 0x61, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x2e, 0x42,
	0x61, 0x6e, 0x41, 0x70, 0x70, 0x65, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x09, 0x62, 0x61, 0x6e, 0x41,
	0x70, 0x70, 0x65, 0x61, 0x6c, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22,
	0x52, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x41, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x22, 0xe3, 0x01, 0x0a, 0x15, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4f, 0x74, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x41, 0x0a,
	0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x3a, 0x0a, 0x0a, 0x6f, 0x74, 0x70, 0x5f, 0x6c, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74,
	0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x6f, 0x74, 0x70, 0x4c, 0x65, 0x6e, 0x67,
	0x74, 0x68, 0x12, 0x35, 0x0a, 0x08, 0x73, 0x6d, 0x73, 0x5f, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x07, 0x73, 0x6d, 0x73, 0x53, 0x65, 0x6e, 0x74, 0x22, 0xf2, 0x01, 0x0a, 0x0e, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x4d, 0x0a, 0x15,
	0x73, 0x68, 0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x6f,
	0x70, 0x74, 0x5f, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f,
	0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x12, 0x73, 0x68, 0x6f, 0x77, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x49, 0x6e, 0x12, 0x47, 0x0a, 0x12, 0x73,
	0x68, 0x6f, 0x77, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x5f, 0x6f, 0x70, 0x74, 0x5f, 0x69,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x0f, 0x73, 0x68, 0x6f, 0x77, 0x53, 0x74, 0x72, 0x69, 0x63, 0x74, 0x4f,
	0x70, 0x74, 0x49, 0x6e, 0x12, 0x48, 0x0a, 0x12, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x5f,
	0x62, 0x79, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x10, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x65, 0x64, 0x42, 0x79, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x93,
	0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x41, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x3f, 0x0a, 0x0f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62,
	0x69, 0x6e, 0x61, 0x72, 0x79, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x69, 0x6e, 0x67, 0x52, 0x0e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x69, 0x6e, 0x67, 0x22, 0xe9, 0x02, 0x0a, 0x15, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4f, 0x74, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x41,
	0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x3a, 0x0a, 0x0a, 0x6f, 0x74, 0x70, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x09, 0x6f, 0x74, 0x70, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x39, 0x0a,
	0x0a, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x53, 0x65, 0x6e, 0x74, 0x12, 0x3f, 0x0a, 0x0f, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x5f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x0e, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x27, 0x0a, 0x0e, 0x75, 0x6e, 0x6d,
	0x61, 0x73, 0x6b, 0x65, 0x64, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x0d, 0x75, 0x6e, 0x6d, 0x61, 0x73, 0x6b, 0x65, 0x64, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x12, 0x23, 0x0a, 0x0c, 0x6d, 0x61, 0x73, 0x6b, 0x65, 0x64, 0x5f, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x6d, 0x61, 0x73, 0x6b,
	0x65, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x42, 0x07, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x22, 0x98, 0x01, 0x0a, 0x0f, 0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x6f, 0x6e, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x35, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xa4, 0x02, 0x0a, 0x0b,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x72,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x35, 0x0a, 0x07, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1b, 0x2e, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x52, 0x07, 0x63,
	0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x41, 0x0a, 0x0e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x74, 0x74,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x61, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x54,
	0x74, 0x6c, 0x22, 0x3e, 0x0a, 0x07, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x12, 0x13, 0x0a,
	0x0f, 0x43, 0x41, 0x50, 0x54, 0x43, 0x48, 0x41, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44,
	0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x41, 0x50, 0x54, 0x43, 0x48, 0x41, 0x5f, 0x56, 0x31,
	0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x41, 0x50, 0x54, 0x43, 0x48, 0x41, 0x5f, 0x56, 0x32,
	0x10, 0x02, 0x22, 0x76, 0x0a, 0x14, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x69,
	0x6c, 0x6c, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x77,
	0x69, 0x6c, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x41, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65,
	0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x72, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xab, 0x01, 0x0a, 0x10, 0x53,
	0x6f, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x3a, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x20, 0x2e, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x2e, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x5b, 0x0a, 0x07, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43,
	0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x53,
	0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x46, 0x41, 0x43, 0x45, 0x42, 0x4f, 0x4f, 0x4b, 0x10,
	0x01, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x47, 0x4f, 0x4f,
	0x47, 0x4c, 0x45, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45,
	0x5f, 0x41, 0x50, 0x50, 0x4c, 0x45, 0x10, 0x03, 0x22, 0x95, 0x01, 0x0a, 0x14, 0x53, 0x6f, 0x63,
	0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x41, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x3a, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x69, 0x6e, 0x61,
	0x72, 0x79, 0x2e, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x22, 0x20, 0x0a, 0x1e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x4c, 0x69, 0x6e, 0x6b, 0x4f, 0x74, 0x70, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x22, 0x6c, 0x0a, 0x0a, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x30,
	0x0a, 0x0a, 0x62, 0x61, 0x6e, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x2e, 0x42, 0x61, 0x6e, 0x52,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x09, 0x62, 0x61, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x22, 0x87, 0x01, 0x0a, 0x09, 0x4d, 0x65, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x3f,
	0x0a, 0x0d, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0c, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xc8, 0x06, 0x0a, 0x13, 0x41,
	0x75, 0x74, 0x68, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x28, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x69, 0x6e, 0x61, 0x72,
	0x79, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x3f, 0x0a, 0x0f, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x62,
	0x69, 0x6e, 0x61, 0x72, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x67, 0x65, 0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x58, 0x0a, 0x18, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6f, 0x74, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x2e,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4f, 0x74, 0x70,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x15, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4f, 0x74, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3f,
	0x0a, 0x0f, 0x67, 0x65, 0x74, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79,
	0x2e, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x00,
	0x52, 0x0d, 0x67, 0x65, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x58, 0x0a, 0x18, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x5f, 0x6f, 0x74, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4f, 0x74, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x48, 0x00, 0x52, 0x15, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x4f, 0x74, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x44, 0x0a, 0x10, 0x6f, 0x6e, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x2e, 0x4f, 0x6e, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0f,
	0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x38, 0x0a, 0x0c, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x2e, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x54, 0x0a, 0x16, 0x73, 0x6f, 0x63,
	0x69, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x69, 0x6e, 0x61,
	0x72, 0x79, 0x2e, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x14, 0x73, 0x6f, 0x63, 0x69, 0x61,
	0x6c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x55, 0x0a, 0x17, 0x61, 0x70, 0x70, 0x6c, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x6e, 0x6f, 0x74, 0x5f, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x00,
	0x52, 0x14, 0x61, 0x70, 0x70, 0x6c, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f,
	0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x75, 0x0a, 0x23, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x5f, 0x6c,
	0x69, 0x6e, 0x6b, 0x5f, 0x6f, 0x74, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x2e, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x4c,
	0x69, 0x6e, 0x6b, 0x4f, 0x74, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x1e, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x61, 0x67, 0x69,
	0x63, 0x4c, 0x69, 0x6e, 0x6b, 0x4f, 0x74, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x06, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x04, 0x5a, 0x02, 0x2e, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_tinder_auth_proto_rawDescOnce sync.Once
	file_tinder_auth_proto_rawDescData = file_tinder_auth_proto_rawDesc
)

func file_tinder_auth_proto_rawDescGZIP() []byte {
	file_tinder_auth_proto_rawDescOnce.Do(func() {
		file_tinder_auth_proto_rawDescData = protoimpl.X.CompressGZIP(file_tinder_auth_proto_rawDescData)
	})
	return file_tinder_auth_proto_rawDescData
}

var file_tinder_auth_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_tinder_auth_proto_msgTypes = make([]protoimpl.MessageInfo, 33)
var file_tinder_auth_proto_goTypes = []interface{}{
	(LoginResult_Captcha)(0),               // 0: binary.LoginResult.Captcha
	(SocialConnection_Service)(0),          // 1: binary.SocialConnection.Service
	(*FacebookToken)(nil),                  // 2: binary.FacebookToken
	(*Phone)(nil),                          // 3: binary.Phone
	(*PhoneOtpResend)(nil),                 // 4: binary.PhoneOtpResend
	(*PhoneOtp)(nil),                       // 5: binary.PhoneOtp
	(*Email)(nil),                          // 6: binary.Email
	(*EmailOtpResend)(nil),                 // 7: binary.EmailOtpResend
	(*GoogleToken)(nil),                    // 8: binary.GoogleToken
	(*EmailOtp)(nil),                       // 9: binary.EmailOtp
	(*AppleToken)(nil),                     // 10: binary.AppleToken
	(*GetInitialState)(nil),                // 11: binary.GetInitialState
	(*RefreshAuth)(nil),                    // 12: binary.RefreshAuth
	(*DismissSocialConnectionList)(nil),    // 13: binary.DismissSocialConnectionList
	(*EmailMagicLink)(nil),                 // 14: binary.EmailMagicLink
	(*EmailMagicLinkOtp)(nil),              // 15: binary.EmailMagicLinkOtp
	(*AuthGatewayRequest)(nil),             // 16: binary.AuthGatewayRequest
	(*Verification)(nil),                   // 17: binary.Verification
	(*UnderageBan)(nil),                    // 18: binary.UnderageBan
	(*BanAppeal)(nil),                      // 19: binary.BanAppeal
	(*BanReason)(nil),                      // 20: binary.BanReason
	(*GetPhoneState)(nil),                  // 21: binary.GetPhoneState
	(*ValidatePhoneOtpState)(nil),          // 22: binary.ValidatePhoneOtpState
	(*EmailMarketing)(nil),                 // 23: binary.EmailMarketing
	(*GetEmailState)(nil),                  // 24: binary.GetEmailState
	(*ValidateEmailOtpState)(nil),          // 25: binary.ValidateEmailOtpState
	(*OnboardingState)(nil),                // 26: binary.OnboardingState
	(*LoginResult)(nil),                    // 27: binary.LoginResult
	(*AppleAccountNotFound)(nil),           // 28: binary.AppleAccountNotFound
	(*SocialConnection)(nil),               // 29: binary.SocialConnection
	(*SocialConnectionList)(nil),           // 30: binary.SocialConnectionList
	(*ValidateEmailMagicLinkOtpState)(nil), // 31: binary.ValidateEmailMagicLinkOtpState
	(*ErrorProto)(nil),                     // 32: binary.ErrorProto
	(*MetaProto)(nil),                      // 33: binary.MetaProto
	(*AuthGatewayResponse)(nil),            // 34: binary.AuthGatewayResponse
	(*wrapperspb.StringValue)(nil),         // 35: google.protobuf.StringValue
	(*wrapperspb.BoolValue)(nil),           // 36: google.protobuf.BoolValue
	(*wrapperspb.Int64Value)(nil),          // 37: google.protobuf.Int64Value
	(*wrapperspb.Int32Value)(nil),          // 38: google.protobuf.Int32Value
	(*timestamppb.Timestamp)(nil),          // 39: google.protobuf.Timestamp
}
var file_tinder_auth_proto_depIdxs = []int32{
	35, // 0: binary.FacebookToken.refresh_token:type_name -> google.protobuf.StringValue
	35, // 1: binary.Phone.refresh_token:type_name -> google.protobuf.StringValue
	35, // 2: binary.Phone.captcha_token:type_name -> google.protobuf.StringValue
	35, // 3: binary.Phone.ios_device_token:type_name -> google.protobuf.StringValue
	35, // 4: binary.Phone.android_jws:type_name -> google.protobuf.StringValue
	35, // 5: binary.PhoneOtpResend.phone:type_name -> google.protobuf.StringValue
	35, // 6: binary.PhoneOtpResend.refresh_token:type_name -> google.protobuf.StringValue
	35, // 7: binary.PhoneOtpResend.ios_device_token:type_name -> google.protobuf.StringValue
	35, // 8: binary.PhoneOtpResend.android_jws:type_name -> google.protobuf.StringValue
	35, // 9: binary.PhoneOtp.phone:type_name -> google.protobuf.StringValue
	35, // 10: binary.PhoneOtp.refresh_token:type_name -> google.protobuf.StringValue
	35, // 11: binary.Email.refresh_token:type_name -> google.protobuf.StringValue
	36, // 12: binary.Email.marketing_opt_in:type_name -> google.protobuf.BoolValue
	35, // 13: binary.EmailOtpResend.email:type_name -> google.protobuf.StringValue
	35, // 14: binary.EmailOtpResend.refresh_token:type_name -> google.protobuf.StringValue
	35, // 15: binary.GoogleToken.refresh_token:type_name -> google.protobuf.StringValue
	36, // 16: binary.GoogleToken.marketing_opt_in:type_name -> google.protobuf.BoolValue
	36, // 17: binary.GoogleToken.user_behavior:type_name -> google.protobuf.BoolValue
	35, // 18: binary.EmailOtp.email:type_name -> google.protobuf.StringValue
	35, // 19: binary.EmailOtp.refresh_token:type_name -> google.protobuf.StringValue
	35, // 20: binary.AppleToken.refresh_token:type_name -> google.protobuf.StringValue
	35, // 21: binary.AppleToken.raw_nonce:type_name -> google.protobuf.StringValue
	35, // 22: binary.GetInitialState.refresh_token:type_name -> google.protobuf.StringValue
	3,  // 23: binary.AuthGatewayRequest.phone:type_name -> binary.Phone
	5,  // 24: binary.AuthGatewayRequest.phone_otp:type_name -> binary.PhoneOtp
	6,  // 25: binary.AuthGatewayRequest.email:type_name -> binary.Email
	8,  // 26: binary.AuthGatewayRequest.google_token:type_name -> binary.GoogleToken
	9,  // 27: binary.AuthGatewayRequest.email_otp:type_name -> binary.EmailOtp
	2,  // 28: binary.AuthGatewayRequest.facebook_token:type_name -> binary.FacebookToken
	4,  // 29: binary.AuthGatewayRequest.phone_otp_resend:type_name -> binary.PhoneOtpResend
	7,  // 30: binary.AuthGatewayRequest.email_otp_resend:type_name -> binary.EmailOtpResend
	11, // 31: binary.AuthGatewayRequest.get_initial_state:type_name -> binary.GetInitialState
	12, // 32: binary.AuthGatewayRequest.refresh_auth:type_name -> binary.RefreshAuth
	10, // 33: binary.AuthGatewayRequest.apple_token:type_name -> binary.AppleToken
	13, // 34: binary.AuthGatewayRequest.dismiss_social_connection_list:type_name -> binary.DismissSocialConnectionList
	14, // 35: binary.AuthGatewayRequest.email_magic_link:type_name -> binary.EmailMagicLink
	15, // 36: binary.AuthGatewayRequest.email_magic_link_otp:type_name -> binary.EmailMagicLinkOtp
	37, // 37: binary.UnderageBan.underage_ttl_duration_ms:type_name -> google.protobuf.Int64Value
	35, // 38: binary.UnderageBan.underage_token:type_name -> google.protobuf.StringValue
	17, // 39: binary.UnderageBan.verification:type_name -> binary.Verification
	36, // 40: binary.UnderageBan.is_onboarding:type_name -> google.protobuf.BoolValue
	18, // 41: binary.BanReason.underage_ban:type_name -> binary.UnderageBan
	19, // 42: binary.BanReason.ban_appeal:type_name -> binary.BanAppeal
	35, // 43: binary.GetPhoneState.refresh_token:type_name -> google.protobuf.StringValue
	35, // 44: binary.ValidatePhoneOtpState.refresh_token:type_name -> google.protobuf.StringValue
	38, // 45: binary.ValidatePhoneOtpState.otp_length:type_name -> google.protobuf.Int32Value
	36, // 46: binary.ValidatePhoneOtpState.sms_sent:type_name -> google.protobuf.BoolValue
	36, // 47: binary.EmailMarketing.show_marketing_opt_in:type_name -> google.protobuf.BoolValue
	36, // 48: binary.EmailMarketing.show_strict_opt_in:type_name -> google.protobuf.BoolValue
	36, // 49: binary.EmailMarketing.checked_by_default:type_name -> google.protobuf.BoolValue
	35, // 50: binary.GetEmailState.refresh_token:type_name -> google.protobuf.StringValue
	23, // 51: binary.GetEmailState.email_marketing:type_name -> binary.EmailMarketing
	35, // 52: binary.ValidateEmailOtpState.refresh_token:type_name -> google.protobuf.StringValue
	38, // 53: binary.ValidateEmailOtpState.otp_length:type_name -> google.protobuf.Int32Value
	36, // 54: binary.ValidateEmailOtpState.email_sent:type_name -> google.protobuf.BoolValue
	23, // 55: binary.ValidateEmailOtpState.email_marketing:type_name -> binary.EmailMarketing
	35, // 56: binary.OnboardingState.user_id:type_name -> google.protobuf.StringValue
	0,  // 57: binary.LoginResult.captcha:type_name -> binary.LoginResult.Captcha
	37, // 58: binary.LoginResult.auth_token_ttl:type_name -> google.protobuf.Int64Value
	35, // 59: binary.AppleAccountNotFound.refresh_token:type_name -> google.protobuf.StringValue
	1,  // 60: binary.SocialConnection.service:type_name -> binary.SocialConnection.Service
	35, // 61: binary.SocialConnectionList.refresh_token:type_name -> google.protobuf.StringValue
	29, // 62: binary.SocialConnectionList.connections:type_name -> binary.SocialConnection
	20, // 63: binary.ErrorProto.ban_reason:type_name -> binary.BanReason
	39, // 64: binary.MetaProto.upstream_time:type_name -> google.protobuf.Timestamp
	39, // 65: binary.MetaProto.start_time:type_name -> google.protobuf.Timestamp
	33, // 66: binary.AuthGatewayResponse.meta:type_name -> binary.MetaProto
	32, // 67: binary.AuthGatewayResponse.error:type_name -> binary.ErrorProto
	21, // 68: binary.AuthGatewayResponse.get_phone_state:type_name -> binary.GetPhoneState
	22, // 69: binary.AuthGatewayResponse.validate_phone_otp_state:type_name -> binary.ValidatePhoneOtpState
	24, // 70: binary.AuthGatewayResponse.get_email_state:type_name -> binary.GetEmailState
	25, // 71: binary.AuthGatewayResponse.validate_email_otp_state:type_name -> binary.ValidateEmailOtpState
	26, // 72: binary.AuthGatewayResponse.onboarding_state:type_name -> binary.OnboardingState
	27, // 73: binary.AuthGatewayResponse.login_result:type_name -> binary.LoginResult
	30, // 74: binary.AuthGatewayResponse.social_connection_list:type_name -> binary.SocialConnectionList
	28, // 75: binary.AuthGatewayResponse.apple_account_not_found:type_name -> binary.AppleAccountNotFound
	31, // 76: binary.AuthGatewayResponse.validate_email_magic_link_otp_state:type_name -> binary.ValidateEmailMagicLinkOtpState
	77, // [77:77] is the sub-list for method output_type
	77, // [77:77] is the sub-list for method input_type
	77, // [77:77] is the sub-list for extension type_name
	77, // [77:77] is the sub-list for extension extendee
	0,  // [0:77] is the sub-list for field type_name
}

func init() { file_tinder_auth_proto_init() }
func file_tinder_auth_proto_init() {
	if File_tinder_auth_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tinder_auth_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FacebookToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tinder_auth_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Phone); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tinder_auth_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhoneOtpResend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tinder_auth_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhoneOtp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tinder_auth_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Email); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tinder_auth_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailOtpResend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tinder_auth_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tinder_auth_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailOtp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tinder_auth_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppleToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tinder_auth_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInitialState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tinder_auth_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshAuth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tinder_auth_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DismissSocialConnectionList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tinder_auth_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailMagicLink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tinder_auth_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailMagicLinkOtp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tinder_auth_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthGatewayRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tinder_auth_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Verification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tinder_auth_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnderageBan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tinder_auth_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BanAppeal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tinder_auth_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BanReason); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tinder_auth_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPhoneState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tinder_auth_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidatePhoneOtpState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tinder_auth_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailMarketing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tinder_auth_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEmailState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tinder_auth_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateEmailOtpState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tinder_auth_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnboardingState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tinder_auth_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tinder_auth_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppleAccountNotFound); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tinder_auth_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SocialConnection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tinder_auth_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SocialConnectionList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tinder_auth_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateEmailMagicLinkOtpState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tinder_auth_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tinder_auth_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetaProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tinder_auth_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthGatewayResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_tinder_auth_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*Phone_CaptchaToken)(nil),
		(*Phone_IosDeviceToken)(nil),
		(*Phone_AndroidJws)(nil),
	}
	file_tinder_auth_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*PhoneOtpResend_IosDeviceToken)(nil),
		(*PhoneOtpResend_AndroidJws)(nil),
	}
	file_tinder_auth_proto_msgTypes[14].OneofWrappers = []interface{}{
		(*AuthGatewayRequest_Phone)(nil),
		(*AuthGatewayRequest_PhoneOtp)(nil),
		(*AuthGatewayRequest_Email)(nil),
		(*AuthGatewayRequest_GoogleToken)(nil),
		(*AuthGatewayRequest_EmailOtp)(nil),
		(*AuthGatewayRequest_FacebookToken)(nil),
		(*AuthGatewayRequest_PhoneOtpResend)(nil),
		(*AuthGatewayRequest_EmailOtpResend)(nil),
		(*AuthGatewayRequest_GetInitialState)(nil),
		(*AuthGatewayRequest_RefreshAuth)(nil),
		(*AuthGatewayRequest_AppleToken)(nil),
		(*AuthGatewayRequest_DismissSocialConnectionList)(nil),
		(*AuthGatewayRequest_EmailMagicLink)(nil),
		(*AuthGatewayRequest_EmailMagicLinkOtp)(nil),
	}
	file_tinder_auth_proto_msgTypes[18].OneofWrappers = []interface{}{
		(*BanReason_UnderageBan)(nil),
		(*BanReason_BanAppeal)(nil),
	}
	file_tinder_auth_proto_msgTypes[23].OneofWrappers = []interface{}{
		(*ValidateEmailOtpState_UnmaskedEmail)(nil),
		(*ValidateEmailOtpState_MaskedEmail)(nil),
	}
	file_tinder_auth_proto_msgTypes[32].OneofWrappers = []interface{}{
		(*AuthGatewayResponse_GetPhoneState)(nil),
		(*AuthGatewayResponse_ValidatePhoneOtpState)(nil),
		(*AuthGatewayResponse_GetEmailState)(nil),
		(*AuthGatewayResponse_ValidateEmailOtpState)(nil),
		(*AuthGatewayResponse_OnboardingState)(nil),
		(*AuthGatewayResponse_LoginResult)(nil),
		(*AuthGatewayResponse_SocialConnectionList)(nil),
		(*AuthGatewayResponse_AppleAccountNotFound)(nil),
		(*AuthGatewayResponse_ValidateEmailMagicLinkOtpState)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tinder_auth_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   33,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tinder_auth_proto_goTypes,
		DependencyIndexes: file_tinder_auth_proto_depIdxs,
		EnumInfos:         file_tinder_auth_proto_enumTypes,
		MessageInfos:      file_tinder_auth_proto_msgTypes,
	}.Build()
	File_tinder_auth_proto = out.File
	file_tinder_auth_proto_rawDesc = nil
	file_tinder_auth_proto_goTypes = nil
	file_tinder_auth_proto_depIdxs = nil
}